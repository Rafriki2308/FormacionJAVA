version: '3.3'
services:
  postgres:
    container_name: postgres3
    image: postgres:latest
    ports:
      - '5432:5432'

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=contrasena
      - POSTGRES_DB=test
    networks:
      - "mynetwork2"

  eureka:
    image: eureka-application
    container_name: eureka-application
    build:
      context: .
      dockerfile: DockerfileEureka
    ports:
      - "8761:8761"
    networks:
      - "mynetwork2"


  backend:
    image: backend-application
    container_name: backend
    build:
      context: .
      dockerfile: DockerfileBackEnd
    ports:
      - "8081:8081"
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres3:5432/postgres
      - spring.datasource.username=postgres
      - spring.datasource.password=contrasena
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
    networks:
      - "mynetwork2"

  frontend:
    image: frontend-application
    container_name: frontend
    build:
      context: .
      dockerfile: DockerfileFrontEnd
    ports:
      - "8080:8080"
    environment:
      - my.direction.feing=http://backend:8081
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
     # - spring.datasource.url=jdbc:postgresql://postgres2:5432/postgres
     # - spring.datasource.password=contrasena
    networks:
      - "mynetwork2"
    depends_on:
      - backend

  gateway:
    image: gateway-application
    container_name: gateway
    build:
      context: .
      dockerfile: DockerfileGateway
    ports:
      - "8082:8082"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/

    networks:
      - "mynetwork2"

networks:
  mynetwork2: